name: "CodeQL Security Analysis"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every Sunday at midnight UTC
    - cron: '0 0 * * 0'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'rust', 'javascript' ]
        # Add other languages as needed: python, java, go, etc.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Custom queries for healthcare-specific patterns
        queries: +security-and-quality
        
    - name: Setup Rust (for Rust analysis)
      if: matrix.language == 'rust'
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Build Rust
      if: matrix.language == 'rust'
      run: |
        cargo build --release
        
    - name: Setup Node.js (for JavaScript analysis)
      if: matrix.language == 'javascript'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install JavaScript dependencies
      if: matrix.language == 'javascript'
      working-directory: ./rustcare-ui
      run: |
        npm install -g pnpm
        pnpm install

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true
        # Output SARIF for review
        output: codeql-results
        
    - name: Upload CodeQL results to GitHub
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: codeql-results
        
    - name: Check for high severity issues
      run: |
        echo "Checking for critical security issues..."
        # Add custom checks if needed
